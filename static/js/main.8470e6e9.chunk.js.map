{"version":3,"sources":["components/Header.js","components/ComplexNumber.js","components/ComplexNumberResult.js","components/ComplexNumbers.js","components/AnimeImage.js","ComplexNumberLogic.js","App.js","reportWebVitals.js","index.js"],"names":["Header","userName","addNewNumber","className","onClick","ComplexNumber","complexNumber","onDelete","onNumberChange","onMathAction","title","correct","type","placeholder","value","rectangularForm","onChange","e","target","id","exponentialForm","timeForm","mathAction","ComplexNumberResult","complexNumberResult","readOnly","ComplexNumbers","complexNumbers","map","number","result","AnimeImage","animeImageInfo","src","url","style","height","alt","PartitionComplex","regExRec","regExExp","regExTime","match","console","log","newReal","Number","isNaN","parseFloat","Math","cos","PI","toFixed","newImag","sin","error","ReconstructComplex","parts","form","newAmplitude","sqrt","pow","newPhase","atan","length","App","useState","mathResult","setResult","URL","animeImage","setAnimeImage","setNumbers","useEffect","a","fetchAnimeImage","imageFromServer","getAnimeImage","fetch","res","json","data","MathAction","answer","numbersUsed","forEach","number1","number2","complex1","complex2","parseInt","AddComplex","SubtractComplex","newNumber","filter","numberType","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8470e6e9.chunk.js","sourcesContent":["//RAFCE shortcut to paste this \r\nconst Header = ({userName, addNewNumber}) => {\r\n    return (\r\n        <div className = 'container bg-dark'>\r\n            <div className = 'row'>\r\n                <div className = 'col-10'>\r\n                    <h4 className = 'text-light'>Add complex numbers below</h4>\r\n                </div>\r\n                <div className = 'col-2'>\r\n                    <button className = 'btn-secondary rounded' onClick = {addNewNumber}>Add number</button>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header","import {FaTimes} from 'react-icons/fa'\r\nimport {FaMinus} from 'react-icons/fa'\r\nimport {FaPlus} from 'react-icons/fa'\r\n\r\nconst ComplexNumber = ({complexNumber, onDelete, onNumberChange, onMathAction}) => {\r\n    return (\r\n        <div className = 'card bg-dark' title=\"Popover title\">\r\n            <div className = {complexNumber.correct ?'bg-success card-body row rounded': 'bg-danger card-body row rounded'}>\r\n                <div className = 'col-3'>\r\n                    <input type = 'text' className = 'form-control' placeholder ='In rectangular form' value = {complexNumber.rectangularForm} onChange = {(e) => onNumberChange(e.target.value, complexNumber.id, 0)}/>\r\n                </div>\r\n                <div className = 'col-3'>\r\n                    <input type = 'text' className = 'form-control' placeholder ='In exponential form' value = {complexNumber.exponentialForm} onChange = {(e) => onNumberChange(e.target.value, complexNumber.id, 1)}/>\r\n                </div>\r\n                <div className = 'col-3'>\r\n                    <input type = 'text' className = 'form-control' placeholder ='In time form' value = {complexNumber.timeForm} onChange = {(e) => onNumberChange(e.target.value, complexNumber.id, 2)}/>\r\n                </div>\r\n                <div className = 'col-3'>\r\n                    <button className = 'btn-danger float-end rounded'  onClick = {() => onDelete(complexNumber.id)}><FaTimes className = 'my-1 mx-0'/></button>\r\n                    <button className = {complexNumber.mathAction === 1? 'btn-primary float-start rounded mx-2': 'btn-secondary float-start rounded mx-2'} onClick = {() => onMathAction(complexNumber, 1)}><FaPlus className = 'my-1 mx-0'/></button>\r\n                    <button className = {complexNumber.mathAction === 2? 'btn-primary float-start rounded': 'btn-secondary float-start rounded'} onClick = {() => onMathAction(complexNumber, 2)}><FaMinus className = 'my-1 mx-0'/></button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ComplexNumber\r\n","const ComplexNumberResult = ({complexNumberResult}) => {\r\n    return (\r\n        <div className = 'card bg-dark'>\r\n            <div className = 'bg-info card-body row rounded'>\r\n                <div className = 'col-1'>\r\n                    <h3 className = 'text-light'>Result: </h3>\r\n                </div>\r\n                <div className = 'col-3'>\r\n                    <input type = 'text' className = 'form-control' placeholder ='In rectangular form' value = {complexNumberResult.rectangularForm} readOnly/>\r\n                </div>\r\n                <div className = 'col-3'>\r\n                    <input type = 'text' className = 'form-control' placeholder ='In exponential form' value = {complexNumberResult.exponentialForm} readOnly/>\r\n                </div>\r\n                <div className = 'col-3'>\r\n                    <input type = 'text' className = 'form-control' placeholder ='In time form' value = {complexNumberResult.timeForm} readOnly/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ComplexNumberResult\r\n","import ComplexNumber from \"./ComplexNumber\"\r\nimport ComplexNumberResult from \"./ComplexNumberResult\"\r\n\r\nconst ComplexNumbers = ({complexNumbers, onDelete, onNumberChange, onMathAction, complexNumberResult}) => {\r\n    \r\n    return (\r\n        <div className = 'card-body container bg-dark'>\r\n            {complexNumbers.map((number) => (<ComplexNumber key = {number.id} complexNumber = {number} onDelete = {onDelete} onNumberChange = {onNumberChange} onMathAction = {onMathAction}/>))}\r\n            {complexNumberResult.result ?<ComplexNumberResult complexNumberResult = {complexNumberResult}/>: null}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ComplexNumbers\r\n","const AnimeImage = ({animeImageInfo}) => {\r\n    return (\r\n        <div className = 'container my-5'>\r\n            <img src = {animeImageInfo.url} className = 'img rounded mx-auto d-block' style = {{height: \"35rem\" }} alt = 'catgirls for the wiiiin'/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AnimeImage\r\n","//Gets real and imaginary, amplitude, phase parts\r\nexport const PartitionComplex = (number) => {\r\n    var regExRec = /^(?:(?<real>(?:[-])?\\d+(?:(?:\\.\\d+)?)?(?!i))?)?(?<imaginary>(?:[+\\-])?\\d+(?:\\.\\d+)?)?[iI]$/i\r\n    var regExExp = /^(?:(?<amplitude>\\d+(?:(?:(?:\\.\\d+)?)))?(?:e))(?<phase>(?:[+\\-])?(\\d+(?:\\.\\d+)?)?)?[iI]$/i\r\n    var regExTime = /^(?:(?<amplitude>(?:[+\\-])?\\d+(?:(?:(?:\\.\\d+)?)))?(?:cos\\())(?:(?<frequency>[0-9w]+(?:(?:\\.\\d+)?)))(?<phase>(?:[+\\-])?(\\d+(?:\\.\\d+)?)?)?(?:(\\)))$/i\r\n\r\n    var result = number.match(regExRec)\r\n    try{\r\n        if(result === null){//Rectangular form\r\n            result = number.match(regExExp)\r\n\r\n            if(result === null){//Exponential form\r\n                result = number.match(regExTime)\r\n\r\n                if(result === null){ //Time form\r\n                    console.log('Error reading string')\r\n                    return null\r\n                }\r\n                else{\r\n                    var newReal = (Number.isNaN(parseFloat(result[1]))? 0: parseFloat(result[1])) * Math.cos((Number.isNaN(parseFloat(result[3]))? 0: parseFloat(result[3])) * Math.PI / 180).toFixed(3)\r\n                    var newImag = (Number.isNaN(parseFloat(result[1]))? 0: parseFloat(result[1])) * Math.sin((Number.isNaN(parseFloat(result[3]))? 0: parseFloat(result[3])) * Math.PI / 180).toFixed(3)\r\n                    return [parseFloat(newReal), parseFloat(newImag), (Number.isNaN(parseFloat(result[1]))? 0: parseFloat(result[1])), (Number.isNaN(parseFloat(result[3]))? 0: parseFloat(result[3]))]\r\n                }\r\n            }\r\n            else{ //Expoenntial\r\n                console.log((Number.isNaN(parseFloat(result[1]))? 0: parseFloat(result[1])))\r\n                var newReal = (Number.isNaN(parseFloat(result[1]))? 0: parseFloat(result[1])) * Math.cos((Number.isNaN(parseFloat(result[2]))? 0: parseFloat(result[2])) * Math.PI / 180).toFixed(3)\r\n                var newImag = (Number.isNaN(parseFloat(result[1]))? 0: parseFloat(result[1])) * Math.sin((Number.isNaN(parseFloat(result[2]))? 0: parseFloat(result[2])) * Math.PI / 180).toFixed(3)\r\n                return[parseFloat(newReal), parseFloat(newImag), (Number.isNaN(parseFloat(result[1]))? 0: parseFloat(result[1])), (Number.isNaN(parseFloat(result[2]))? 0: parseFloat(result[2]))]\r\n            }\r\n        }\r\n        else{ //Rectangular\r\n            var newReal = (Number.isNaN(parseFloat(result[1]))? 0: parseFloat(result[1]))\r\n            var newImag = (Number.isNaN(parseFloat(result[2]))? 0: parseFloat(result[2]))\r\n            return [newReal, newImag]\r\n        }\r\n    }\r\n    catch(error){\r\n        console.log('Error reading string')\r\n        return null\r\n    }\r\n}\r\n\r\n//Reconstructs complex number from real and imag parts to rectangular form\r\nexport const ReconstructComplex = (parts, form) => { //Parts[0] - real, 1 - imag, 2-amplitude, 3-phase\r\n    var newAmplitude = Math.sqrt(Math.pow(parts[0], 2) + Math.pow(parts[1], 2))\r\n    var newPhase = Math.atan(parts[1]/parts[0]) * 180 / Math.PI\r\n    switch(form){\r\n        default:\r\n            console.log('Bad reconstrucion form selected: ', form) \r\n            return ''\r\n        case 'rectangular':\r\n            return parseFloat(parts[0].toFixed(3)) + (parts[1] > 0? '+': '') + parseFloat(parts[1].toFixed(3)) + 'i'\r\n        case 'exponential':\r\n            if(parts.length > 2){\r\n                return parseFloat(parts[2].toFixed(3)) + 'e' + parseFloat(parts[3].toFixed(3)) + 'i'\r\n            }\r\n            else{\r\n                return parseFloat(newAmplitude.toFixed(3)) + 'e' + parseFloat(newPhase.toFixed(3)) + 'i'\r\n            }\r\n        case 'time':\r\n            if(parts.length > 2){\r\n                return parseFloat(parts[2].toFixed(3)) + 'cos(w' + (parts[3] > 0 ? '+': '') + parseFloat(parts[3].toFixed(3)) + ')'\r\n            }\r\n            else{\r\n                return parseFloat(newAmplitude.toFixed(3)) + 'cos(w' + (newPhase > 0 ? '+': '') + parseFloat(newPhase.toFixed(3)) + ')'\r\n            }\r\n    }\r\n}\r\n\r\nexport const AddComplex = (number1, number2) => {\r\n    var complex1 = PartitionComplex(number1)\r\n    var complex2 = PartitionComplex(number2)\r\n    return ReconstructComplex([parseInt(complex1[0]) + parseInt(complex2[0]), parseInt(complex1[1]) + parseInt(complex2[1])], 'rectangular')\r\n}\r\n\r\nexport const SubtractComplex = (number1, number2) => {\r\n    var complex1 = PartitionComplex(number1)\r\n    var complex2 = PartitionComplex(number2)\r\n    return ReconstructComplex([parseInt(complex1[0]) - parseInt(complex2[0]), parseInt(complex1[1]) - parseInt(complex2[1])], 'rectangular')\r\n}","import Header from \"./components/Header\"\r\nimport ComplexNumbers from \"./components/ComplexNumbers\"\r\nimport AnimeImage from \"./components/AnimeImage\"\r\n\r\nimport {AddComplex, SubtractComplex, PartitionComplex, ReconstructComplex} from './ComplexNumberLogic'\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\n\r\nimport {} from 'react-bootstrap'\r\n\r\nimport {useState, useEffect} from 'react' //A so called Hook\r\n\r\nfunction App() {\r\n  const name = \"Simonas\"\r\n  const [mathResult, setResult] = useState({result: false, rectangularForm: '', exponentialForm: '', timeForm: '',});\r\n  const [animeImage, setAnimeImage] = useState({URL: ''})\r\n\r\n  const [complexNumbers, setNumbers] = useState([])\r\n\r\n  useEffect(() => {\r\n    const getAnimeImage = async () =>{\r\n      const imageFromServer = await fetchAnimeImage()\r\n      setAnimeImage(imageFromServer)\r\n      console.log(imageFromServer)\r\n    }\r\n\r\n    getAnimeImage()\r\n  }, [])\r\n  \r\n  //Fetch anime pic\r\n  const fetchAnimeImage = async() => {\r\n    const res = await fetch('https://api.waifu.pics/sfw/neko')\r\n    const data = await res.json()\r\n    return data\r\n  }\r\n\r\n//Delete number\r\nconst deleteNumber  = (id) => {\r\n  setNumbers(complexNumbers.filter((number) => (number.id !== id)))\r\n}\r\n\r\n//ChangeComplexNUmberVlaue\r\nconst changeNumber = (newNumber, id, numberType) =>{\r\n  var result = PartitionComplex(newNumber)\r\n  switch(numberType){\r\n    default:\r\n      break;\r\n    case 0:\r\n      if (result === null){\r\n        setNumbers(complexNumbers.map((number) => (number.id === id ?{... number, rectangularForm: newNumber, exponentialForm: '', timeForm: '', correct: false} : number)))\r\n      }\r\n      else{\r\n        setNumbers(complexNumbers.map((number) => (number.id === id ?{... number, rectangularForm: newNumber, exponentialForm: ReconstructComplex(result, 'exponential'), timeForm: ReconstructComplex(result, 'time'), correct: true} : number)))\r\n      }\r\n      break;\r\n    case 1:\r\n      if (result === null){\r\n        setNumbers(complexNumbers.map((number) => (number.id === id ?{... number, rectangularForm: '', exponentialForm: newNumber, timeForm: '', correct: false} : number)))\r\n      }\r\n      else{\r\n        setNumbers(complexNumbers.map((number) => (number.id === id ?{... number, rectangularForm: ReconstructComplex(result, 'rectangular'), exponentialForm: newNumber, timeForm: ReconstructComplex(result, 'time'), correct: true} : number)))\r\n      }\r\n      break;\r\n    case 2:\r\n      if (result === null){\r\n        setNumbers(complexNumbers.map((number) => (number.id === id ?{... number, rectangularForm: '', exponentialForm: '', timeForm: newNumber, correct: false} : number)))\r\n      }\r\n      else{\r\n        setNumbers(complexNumbers.map((number) => (number.id === id ?{... number, rectangularForm: ReconstructComplex(result, 'rectangular'), exponentialForm: ReconstructComplex(result, 'exponential'), timeForm: newNumber, correct: true} : number)))\r\n      }\r\n      break;\r\n  }\r\n  MathAction()\r\n}\r\n\r\nconst MathActionButtonPressed = (complexNumber, mathAction) => {\r\n  if(complexNumber.mathAction === mathAction){\r\n    complexNumber.mathAction = 0\r\n  }\r\n  else{\r\n    complexNumber.mathAction = mathAction\r\n  }\r\n  MathAction()\r\n}\r\n\r\n//Addition substraction operations\r\nconst MathAction = () => {\r\n  var answer = ''\r\n  var numbersUsed = 0\r\n  complexNumbers.forEach(function(number){\r\n    if(number.correct && number.mathAction !== 0){\r\n      if(numbersUsed === 0){\r\n        answer = number.rectangularForm\r\n        numbersUsed++\r\n      }\r\n      else{\r\n        switch(number.mathAction){\r\n          default:\r\n            console.log('Bad math action')\r\n            break;\r\n          case 1:\r\n            answer = AddComplex(answer, number.rectangularForm)\r\n            break;\r\n          case 2:\r\n            answer = SubtractComplex(answer, number.rectangularForm)\r\n            break;\r\n        }\r\n      }\r\n    }\r\n  })\r\n  if(answer !== ''){\r\n    setResult({...mathResult, rectangularForm: answer, exponentialForm: ReconstructComplex(PartitionComplex(answer), 'exponential'), timeForm: ReconstructComplex(PartitionComplex(answer), 'time'), result: true})\r\n  }\r\n}\r\n\r\n\r\n//AddComplexNumber\r\nconst AddNewNumber = () => {\r\n  const newNumber = {id: complexNumbers.length + 1,\r\n    rectangularForm: '', exponentialForm: '', timeForm: '', correct: false, mathAction: 0,\r\n}\r\n  setNumbers([...complexNumbers, newNumber])\r\n}\r\n\r\n  return (\r\n    <div className=\"App bg-dark\">\r\n      <div className = 'container bg-dark'>\r\n        <div className = 'row'>\r\n          <div className = 'col-12'>\r\n            <h1 className = 'h1 text-center bg-dark text-light'>Complex number converter</h1>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Header userName = {name} addNewNumber = {AddNewNumber}/>\r\n      <div className = 'card mx-5 my-2 bg-dark'>\r\n        {complexNumbers.length > 0 ?<ComplexNumbers complexNumbers = {complexNumbers} onDelete = {deleteNumber} onNumberChange = {changeNumber} onMathAction = {MathActionButtonPressed} complexNumberResult = {mathResult}/>\r\n        : <p className = 'text mx-2 my-2 text-light'>No numbers, press above to add</p> }\r\n       </div>\r\n       <div>\r\n         <AnimeImage animeImageInfo = {animeImage}/>\r\n       </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}